service: product-service

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-west-1

  iam:
    role:
      statements:
        - Effect: Allow
          Action: sqs:SendMessage
          Resource: arn:aws:sqs:eu-west-1:562467770486:catalogItemsQueue
        - Effect: Allow
          Action: sns:*
          Resource:
            Ref: ProductsTopic

plugins:
  - serverless-webpack

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
    packager: 'npm'

  environment:
    PG_HOST: ${env:AWS_PG_HOST}
    PG_PORT: ${env:AWS_PG_PORT}
    PG_DATABASE: ${env:AWS_PG_DATABASE}
    PG_USERNAME: ${env:AWS_PG_USERNAME}
    PG_PASSWORD: ${env:AWS_PG_PASSWORD}

functions:
  getProductsList:
    handler: handler.getProductsList
    events:
      - http:
          path: products
          method: get
          cors: true
  getProductsById:
    handler: handler.getProductsById
    events:
      - http:
          path: products/{productId}
          method: get
          cors: true
  createProduct:
    handler: handler.createProduct
    events:
      - http:
          path: products
          method: post
          cors: true
  catalogBatchProcess:
    handler: handler.catalogBatchProcess
    events:
      - sqs:
          arn: arn:aws:sqs:eu-west-1:562467770486:catalogItemsQueue
          batchSize: 5

resources:
  Resources:
    CatalogItemsQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: catalogItemsQueue
    ProductsTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: createProductTopic
    SNSSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: faizralf@gmail.com
        Protocol: email
        TopicArn: arn:aws:sns:eu-west-1:562467770486:createProductTopic
